# Once flask is running, tests can be executed via:
#   resttest.py http://localhost:8080 User.yaml

---
- config:
    - testset: "User Tests"

- test:
    - group: "User-Success"
    - name: "Basic post"
    - url: "/api/user/test123@school.edu"
    - method: "POST"
    - body: '{"distance": 4.657, "isleader": true, "email": "test123@school.edu"}'
    - headers: {Content-Type: application/json}
- test:
    - group: "User-Failure"
    - name: "POST without key in URL"
    - url: "/api/user/"
    - method: "POST"
    - body: '{"distance": 4.657, "isleader": true, "email": "test123@school.edu"}'
    - expected_status: [404]
    - headers: {Content-Type: application/json}
- test:
    - group: "User-Put"
    - name: "Put to modify user"
    - url: "/api/user/test123@school.edu"
    - method: "PUT"
    - body: '{"distance": 5.657, "isleader": false, "email": "test123@school.edu"}'
    - headers: {Content-Type: application/json}
- test:
    - group: "User-Get"
    - name: "Get modified user"
    - url: "/api/user/test123@school.edu"
    - method: "GET"
    - validators: # operator is applied as: <actual> <operator> <expected>
      - compare: {jsonpath_mini: "distance",     comparator: "eq",     expected: 5.657}
      - compare: {jsonpath_mini: "isleader",     comparator: "eq",     expected: false}
- test:
    - group: "User-Delete"
    - name: "Put to modify user"
    - url: "/api/user/test123@school.edu"
    - method: "DELETE"
    - headers: {Content-Type: application/json}
- test:
    - group: "User-Get after delete"
    - name: "Get a user thats been deleted"
    - url: "/api/user/test123@school.edu"
    - method: "GET"
    - expected_status: [400, 500]
    - headers: {Content-Type: application/json}
